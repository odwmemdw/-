local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local function updateCharacter(newCharacter)
    character = newCharacter
end

player.CharacterAdded:Connect(updateCharacter)

local teleportButton = Instance.new("ImageButton")
teleportButton.Size = UDim2.new(0, 68, 0, 68)
teleportButton.Position = UDim2.new(1, -260, 1, -60)
teleportButton.AnchorPoint = Vector2.new(0.5, 0.5)
teleportButton.BackgroundTransparency = 1
teleportButton.Image = "rbxassetid://12345678"
teleportButton.ImageColor3 = Color3.fromRGB(255, 255, 255)

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(1, 0)
corner.Parent = teleportButton

local screenGui = player.PlayerGui:FindFirstChildOfClass("ScreenGui") or Instance.new("ScreenGui", player.PlayerGui)
teleportButton.Parent = screenGui

teleportButton.MouseButton1Click:Connect(function()
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        print("Character or HumanoidRootPart not found!")
        return
    end
local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
local teleportDistance = 200
local camera = workspace.CurrentCamera
local lookDirection = camera.CFrame.LookVector
local targetPosition = humanoidRootPart.Position + (lookDirection * teleportDistance)

local rayParams = RaycastParams.new()
      rayParams.FilterDescendantsInstances = {character}
      rayParams.FilterType = Enum.RaycastFilterType.Blacklist

local rayResult = workspace:Raycast(humanoidRootPart.Position, lookDirection * teleportDistance, rayParams)

        if rayResult then
            targetPosition = rayResult.Position - lookDirection * 2
        end

        humanoidRootPart.CFrame = CFrame.new(targetPosition)
        print("Teleported to:", targetPosition)
    else
        print("HumanoidRootPart not found!")
    end
end)
